// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Password when align set to left functions as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when input is focused functions as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when input is focused when input looses focus renders as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when input is focused when value changed functions as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  align="left"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to left when value property is updated functions as expected 1`] = `
<Password
  align="left"
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      align="left"
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right functions as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when input is focused functions as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when input is focused when input looses focus renders as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when input is focused when value changed functions as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  align="right"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when align set to right when value property is updated functions as expected 1`] = `
<Password
  align="right"
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      align="right"
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input frost-text-align-right"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in functions as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when input is focused functions as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when input is focused when input looses focus renders as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when input is focused when value changed functions as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  className="foobar"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when class name passed in when value property is updated functions as expected 1`] = `
<Password
  className="foobar"
  value="some-new-value"
>
  <div
    className="frost-password foobar"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false functions as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when input is focused functions as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when input is focused when input looses focus renders as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when input is focused when value changed functions as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  disabled={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to false when value property is updated functions as expected 1`] = `
<Password
  disabled={false}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={false}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to true functions as expected 1`] = `
<Password
  disabled={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to true when input is focused functions as expected 1`] = `
<Password
  disabled={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to true when input is focused when input looses focus renders as expected 1`] = `
<Password
  disabled={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when disabled set to true when value property is updated functions as expected 1`] = `
<Password
  disabled={true}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      disabled={true}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false functions as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when input is focused functions as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when input is focused when input looses focus renders as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when input is focused when value changed functions as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  error={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to false when value property is updated functions as expected 1`] = `
<Password
  error={false}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={false}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true functions as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when input is focused functions as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when input is focused when input looses focus renders as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when input is focused when value changed functions as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  error={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when error set to true when value property is updated functions as expected 1`] = `
<Password
  error={true}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      error={true}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 functions as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when input is focused functions as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when input is focused when input looses focus renders as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when input is focused when value changed functions as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="b"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  maxLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when maximum length set to 1 when value property is updated functions as expected 1`] = `
<Password
  maxLength={1}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      maxLength={1}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          maxLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 functions as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when input is focused functions as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when input is focused when input looses focus renders as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when input is focused when value changed functions as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  minLength={1}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-error"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when minimum length set to 1 when value property is updated functions as expected 1`] = `
<Password
  minLength={1}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      minLength={1}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          minLength={1}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in functions as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when input is focused functions as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when input is focused when input looses focus renders as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when input is focused when value changed functions as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when no properties passed in when value property is updated functions as expected 1`] = `
<Password
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set functions as expected 1`] = `
<Password
  onChange={[MockFunction]}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={[MockFunction]}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when input is focused functions as expected 1`] = `
<Password
  onChange={[MockFunction]}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={[MockFunction]}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when input is focused when input looses focus renders as expected 1`] = `
<Password
  onChange={[MockFunction]}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={[MockFunction]}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when input is focused when value changed functions as expected 1`] = `
<Password
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "baz",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "baz",
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "baz",
        ],
        Array [
          null,
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "baz",
            ],
            Array [
              null,
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "baz",
        ],
        Array [
          null,
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              "baz",
            ],
            Array [
              null,
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        }
      }
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when onChange set when value property is updated functions as expected 1`] = `
<Password
  onChange={[MockFunction]}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      onChange={[MockFunction]}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false functions as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when input is focused functions as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when input is focused when input looses focus renders as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when input is focused when value changed functions as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  readOnly={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to false when value property is updated functions as expected 1`] = `
<Password
  readOnly={false}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={false}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={false}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to true functions as expected 1`] = `
<Password
  readOnly={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to true when input is focused functions as expected 1`] = `
<Password
  readOnly={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to true when input is focused when input looses focus renders as expected 1`] = `
<Password
  readOnly={true}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={true}
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when readOnly set to true when value property is updated functions as expected 1`] = `
<Password
  readOnly={true}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      readOnly={true}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false functions as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when input is focused functions as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when input is focused when input looses focus renders as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when input is focused when value changed functions as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  revealable={false}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to false when value property is updated functions as expected 1`] = `
<Password
  revealable={false}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when revealable set to true functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when input looses focus renders as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when reveal toggled via mouse functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="text"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Hide password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Hide
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when reveal toggled via mouse when reveal toggled again via mouse functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal focused when another key is pressed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal focused when enter key pressed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="text"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Hide password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Hide
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal focused when enter key pressed when reveal toggled again via enter key functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal focused when spacebar pressed functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="text"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Hide password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Hide
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal focused when spacebar pressed when reveal toggled again via spacebar functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal toggled via mouse functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="text"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="text"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Hide password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Hide
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when input is focused when value changed when reveal toggled via mouse when reveal toggled again via mouse functions as expected 1`] = `
<Password
  revealable={true}
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when revealable set to true when value property is updated functions as expected 1`] = `
<Password
  revealable={true}
  value="some-new-value"
>
  <div
    className="frost-password frost-password-revealable"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
    <button
      aria-label="Show password"
      className="frost-password-reveal"
      onKeyPress={[Function]}
      onMouseUp={[Function]}
    >
      Show
    </button>
  </div>
</Password>
`;

exports[`Password when size set to 3 functions as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when input is focused functions as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when input is focused when input looses focus renders as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when input is focused when value changed functions as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  size={3}
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when size set to 3 when value property is updated functions as expected 1`] = `
<Password
  size={3}
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      size={3}
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input frost-text-size"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          size={3}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string functions as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when input is focused functions as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when input is focused when input looses focus renders as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when input is focused when value changed functions as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  value=""
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value=""
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to empty string when value property is updated functions as expected 1`] = `
<Password
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="foobar"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="foobar"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when clear button fade in animation has completed functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="foobar"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when input looses focus renders as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="foobar"
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when input looses focus when clear button fade out animation has completed functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="foobar"
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when value changed functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="baz"
        />
        <button
          className="frost-text-clear frost-fade-in"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when value changed when clear button is pressed functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
        <button
          className="frost-text-clear frost-fade-out"
          onAnimationEnd={[Function]}
          onClick={[Function]}
          tabIndex={-1}
        >
          <ClearSVG>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
              />
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
            </svg>
          </ClearSVG>
        </button>
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when input is focused when value changed when clear button is pressed when clear button fade out animation has completed functions as expected 1`] = `
<Password
  value="foobar"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="foobar"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value=""
        />
      </div>
    </Text>
  </div>
</Password>
`;

exports[`Password when value set to non-empty string when value property is updated functions as expected 1`] = `
<Password
  value="some-new-value"
>
  <div
    className="frost-password"
  >
    <Text
      className="frost-password-input"
      type="password"
      value="some-new-value"
    >
      <div
        className="frost-text frost-password-input"
      >
        <input
          className="frost-text-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          type="password"
          value="some-new-value"
        />
      </div>
    </Text>
  </div>
</Password>
`;
